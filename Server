import java.io.*;
import java.net.*;
import java.util.Arrays;
import java.util.Scanner;
import java.util.TreeMap;

public class Main {
    private static ServerSocket serverSocket;
    private static Socket clientSocket;
    private static InputStream in;
    private static OutputStream out;
    private static ObjectInputStream objectInputStream;
    private static DataOutputStream dataOutputStream;
    private static double sumOddElements;

    public static void main(String[] args) throws IOException {
        //serialProcessing();
        parallelProcessing();
    }

    public static void serialProcessing() {
        try {
            serverSocket = new ServerSocket(4444);
        } catch (IOException e) {
            System.out.println("Could not listen on port: 4444");
            System.exit(-1);
        }

        while (true) {
            try {
                clientSocket = serverSocket.accept();
                try {
                    in = clientSocket.getInputStream();
                    out = clientSocket.getOutputStream();
                    objectInputStream = new ObjectInputStream(in);
                    Matrix matrixFromClient = (Matrix) objectInputStream.readObject();

                    sumOddElements = Matrix.sumOddElements(matrixFromClient);
                    dataOutputStream = new DataOutputStream(out);
                    dataOutputStream.writeDouble(sumOddElements);
                } finally {
                    in.close();
                    out.close();
                    dataOutputStream.close();
                    objectInputStream.close();
                    clientSocket.close();
                }
            } catch (IOException | ClassNotFoundException e) {
                System.out.println("Accept failed: 4444");
                System.exit(-1);
            }
        }
    }

    public static void parallelProcessing() {
        try {
            serverSocket = new ServerSocket(4444);
        } catch (IOException e) {
            System.out.println("Could not listen on port: 4444");
            System.exit(-1);
        }

        while (true) {
            try {
                clientSocket = serverSocket.accept();
                Runnable runnable = new Runnable() {
                    @Override
                    public void run() {
                        try {
                            in = clientSocket.getInputStream();
                            out = clientSocket.getOutputStream();
                            objectInputStream = new ObjectInputStream(in);
                            Matrix matrixFromClient = (Matrix) objectInputStream.readObject();

                            sumOddElements = Matrix.sumOddElements(matrixFromClient);
                            System.out.println(sumOddElements);
                            dataOutputStream = new DataOutputStream(out);
                            dataOutputStream.writeDouble(sumOddElements);
                        } catch (IOException | ClassNotFoundException e) {
                            throw new RuntimeException(e);
                        } finally {
                            try {
                                in.close();
                                out.close();
                                dataOutputStream.close();
                                objectInputStream.close();
                                clientSocket.close();
                            } catch (IOException e) {
                                throw new RuntimeException(e);
                            }
                        }
                    }
                };
                Thread thread = new Thread(runnable);
                thread.start();
            } catch (IOException e) {
                System.out.println("Accept failed: 4444");
                System.exit(-1);
            }
        }
    }
}
